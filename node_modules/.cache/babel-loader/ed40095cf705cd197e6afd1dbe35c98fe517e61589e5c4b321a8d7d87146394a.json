{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vj26r\\\\app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calculatePoints = amount => {\n  let points = 0;\n  if (amount > 100) {\n    points += (amount - 100) * 2;\n    amount = 100;\n  }\n  if (amount > 50) {\n    points += (amount - 50) * 1;\n  }\n  return points;\n};\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [rewards, setRewards] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/customers.json');\n        const result = await response.json();\n        setData(result);\n      } catch (error) {\n        console.error('Error fetching the customer data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const calculateRewards = () => {\n      const rewardsSummary = {};\n      data.forEach(customer => {\n        let customerRewards = {};\n        customer.transactions.forEach(transaction => {\n          const month = new Date(transaction.date).getMonth() + 1; // getMonth is 0-indexed\n          const points = calculatePoints(transaction.amount);\n          if (!customerRewards[month]) {\n            customerRewards[month] = 0;\n          }\n          customerRewards[month] += points;\n        });\n        const totalPoints = Object.values(customerRewards).reduce((acc, val) => acc + val, 0);\n        customerRewards.total = totalPoints;\n        rewardsSummary[customer.customerId] = {\n          name: customer.name,\n          ...customerRewards\n        };\n      });\n      setRewards(rewardsSummary);\n    };\n    if (data.length > 0) {\n      calculateRewards();\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Customer Reward Points\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Customer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"July\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"August\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"September\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.entries(rewards).map(([customerId, rewardData]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: rewardData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: rewardData[7] || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: rewardData[8] || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: rewardData[9] || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: rewardData.total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, customerId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"JD6kbXZwGfw1Q7BQ3ozJF70cb3Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","calculatePoints","amount","points","App","_s","data","setData","rewards","setRewards","fetchData","response","fetch","result","json","error","console","calculateRewards","rewardsSummary","forEach","customer","customerRewards","transactions","transaction","month","Date","date","getMonth","totalPoints","Object","values","reduce","acc","val","total","customerId","name","length","children","fileName","_jsxFileName","lineNumber","columnNumber","border","entries","map","rewardData","_c","$RefreshReg$"],"sources":["C:/Users/vj26r/app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst calculatePoints = (amount) => {\n  let points = 0;\n  if (amount > 100) {\n    points += (amount - 100) * 2;\n    amount = 100;\n  }\n  if (amount > 50) {\n    points += (amount - 50) * 1;\n  }\n  return points;\n};\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [rewards, setRewards] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/customers.json');\n        const result = await response.json();\n        setData(result);\n      } catch (error) {\n        console.error('Error fetching the customer data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const calculateRewards = () => {\n      const rewardsSummary = {};\n\n      data.forEach(customer => {\n        let customerRewards = {};\n\n        customer.transactions.forEach(transaction => {\n          const month = new Date(transaction.date).getMonth() + 1; // getMonth is 0-indexed\n          const points = calculatePoints(transaction.amount);\n\n          if (!customerRewards[month]) {\n            customerRewards[month] = 0;\n          }\n          customerRewards[month] += points;\n        });\n\n        const totalPoints = Object.values(customerRewards).reduce((acc, val) => acc + val, 0);\n        customerRewards.total = totalPoints;\n\n        rewardsSummary[customer.customerId] = {\n          name: customer.name,\n          ...customerRewards,\n        };\n      });\n\n      setRewards(rewardsSummary);\n    };\n\n    if (data.length > 0) {\n      calculateRewards();\n    }\n  }, [data]);\n\n  return (\n    <div>\n      <h1>Customer Reward Points</h1>\n      <table border=\"1\">\n        <thead>\n          <tr>\n            <th>Customer</th>\n            <th>July</th>\n            <th>August</th>\n            <th>September</th>\n            <th>Total</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.entries(rewards).map(([customerId, rewardData]) => (\n            <tr key={customerId}>\n              <td>{rewardData.name}</td>\n              <td>{rewardData[7] || 0}</td>\n              <td>{rewardData[8] || 0}</td>\n              <td>{rewardData[9] || 0}</td>\n              <td>{rewardData.total}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAIC,MAAM,IAAK;EAClC,IAAIC,MAAM,GAAG,CAAC;EACd,IAAID,MAAM,GAAG,GAAG,EAAE;IAChBC,MAAM,IAAI,CAACD,MAAM,GAAG,GAAG,IAAI,CAAC;IAC5BA,MAAM,GAAG,GAAG;EACd;EACA,IAAIA,MAAM,GAAG,EAAE,EAAE;IACfC,MAAM,IAAI,CAACD,MAAM,GAAG,EAAE,IAAI,CAAC;EAC7B;EACA,OAAOC,MAAM;AACf,CAAC;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,CAAC;QAC/C,MAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACpCP,OAAO,CAACM,MAAM,CAAC;MACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;IAEDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACd,MAAMmB,gBAAgB,GAAGA,CAAA,KAAM;MAC7B,MAAMC,cAAc,GAAG,CAAC,CAAC;MAEzBZ,IAAI,CAACa,OAAO,CAACC,QAAQ,IAAI;QACvB,IAAIC,eAAe,GAAG,CAAC,CAAC;QAExBD,QAAQ,CAACE,YAAY,CAACH,OAAO,CAACI,WAAW,IAAI;UAC3C,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAACF,WAAW,CAACG,IAAI,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;UACzD,MAAMxB,MAAM,GAAGF,eAAe,CAACsB,WAAW,CAACrB,MAAM,CAAC;UAElD,IAAI,CAACmB,eAAe,CAACG,KAAK,CAAC,EAAE;YAC3BH,eAAe,CAACG,KAAK,CAAC,GAAG,CAAC;UAC5B;UACAH,eAAe,CAACG,KAAK,CAAC,IAAIrB,MAAM;QAClC,CAAC,CAAC;QAEF,MAAMyB,WAAW,GAAGC,MAAM,CAACC,MAAM,CAACT,eAAe,CAAC,CAACU,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,GAAGC,GAAG,EAAE,CAAC,CAAC;QACrFZ,eAAe,CAACa,KAAK,GAAGN,WAAW;QAEnCV,cAAc,CAACE,QAAQ,CAACe,UAAU,CAAC,GAAG;UACpCC,IAAI,EAAEhB,QAAQ,CAACgB,IAAI;UACnB,GAAGf;QACL,CAAC;MACH,CAAC,CAAC;MAEFZ,UAAU,CAACS,cAAc,CAAC;IAC5B,CAAC;IAED,IAAIZ,IAAI,CAAC+B,MAAM,GAAG,CAAC,EAAE;MACnBpB,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAACX,IAAI,CAAC,CAAC;EAEV,oBACEN,OAAA;IAAAsC,QAAA,gBACEtC,OAAA;MAAAsC,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B1C,OAAA;MAAO2C,MAAM,EAAC,GAAG;MAAAL,QAAA,gBACftC,OAAA;QAAAsC,QAAA,eACEtC,OAAA;UAAAsC,QAAA,gBACEtC,OAAA;YAAAsC,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjB1C,OAAA;YAAAsC,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACb1C,OAAA;YAAAsC,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACf1C,OAAA;YAAAsC,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClB1C,OAAA;YAAAsC,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR1C,OAAA;QAAAsC,QAAA,EACGT,MAAM,CAACe,OAAO,CAACpC,OAAO,CAAC,CAACqC,GAAG,CAAC,CAAC,CAACV,UAAU,EAAEW,UAAU,CAAC,kBACpD9C,OAAA;UAAAsC,QAAA,gBACEtC,OAAA;YAAAsC,QAAA,EAAKQ,UAAU,CAACV;UAAI;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1B1C,OAAA;YAAAsC,QAAA,EAAKQ,UAAU,CAAC,CAAC,CAAC,IAAI;UAAC;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7B1C,OAAA;YAAAsC,QAAA,EAAKQ,UAAU,CAAC,CAAC,CAAC,IAAI;UAAC;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7B1C,OAAA;YAAAsC,QAAA,EAAKQ,UAAU,CAAC,CAAC,CAAC,IAAI;UAAC;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7B1C,OAAA;YAAAsC,QAAA,EAAKQ,UAAU,CAACZ;UAAK;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GALpBP,UAAU;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMf,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACrC,EAAA,CA/EID,GAAG;AAAA2C,EAAA,GAAH3C,GAAG;AAiFT,eAAeA,GAAG;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}